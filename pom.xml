<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>org.daisy.pipeline.modules</groupId>
    <artifactId>modules-parent</artifactId>
    <version>1.14.15</version>
  </parent>
  
  <groupId>ch.sbs.pipeline</groupId>
  <artifactId>dtbook-to-odt</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>bundle</packaging>
  
  <name>DAISY Pipeline 2 module :: sbs:dtbook-to-odt</name>
  
  <properties>
    <tagNameFormat>v@{project.version}</tagNameFormat>
  </properties>
  
  <dependencies>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>dtbook-to-odt</artifactId>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>dtbook-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>image-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>asciimath-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>fileset-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>file-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>common-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>html-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>zip-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>mediatype-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>validation-utils</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.modules</groupId>
      <artifactId>dtbook-validator</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.maven</groupId>
      <artifactId>xproc-engine-daisy-pipeline</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.daisy.pipeline.build</groupId>
      <artifactId>modules-test-helper</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <scm>
    <developerConnection>scm:git:ssh://git@github.com:sbsdev/dtbook-to-odt.git</developerConnection>
  </scm>

  <build>
    <resources>
      <resource>
	<directory>src/main/resources</directory>
	<excludes>
	  <exclude>templates/**</exclude>
	  <exclude>xml/dtbook-to-odt.xpl</exclude>
	</excludes>
      </resource>
      <resource>
	<directory>target/generated-resources</directory>
	<includes>
	  <include>templates/**</include>
	  <include>xml/dtbook-to-odt.xpl</include>
	</includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.daisy.pipeline.build</groupId>
        <artifactId>modules-build-helper</artifactId>
        <executions>
	  <execution>
	    <id>process-catalog</id>
	    <configuration>
	      <!--
		  avoid name collision
	      -->
	      <moduleName>sbs-${project.artifactId}</moduleName>
	    </configuration>
	  </execution>
        </executions>
      </plugin>
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>shell-maven-plugin</artifactId>
	<executions>
	  <execution>
	    <id>generate-ott</id>
	    <phase>generate-resources</phase>
	    <goals>
	      <goal>shell</goal>
	    </goals>
	    <configuration>
	      <workDir>${project.basedir}</workDir>
	      <chmod>true</chmod>
	      <script>
		#!/bin/sh
		zip_odt() {
		  cd $1
		  zip -0 -X $2 mimetype
		  zip -r $2 * -x mimetype
		}
		rm -rf target/generated-resources/templates
		mkdir -p target/generated-resources/templates
		for template in $(ls src/main/resources/templates); do
		  (zip_odt src/main/resources/templates/${template} $(pwd)/target/generated-resources/templates/${template})
		done
	      </script>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
    </plugins>
  </build>
  
</project>
